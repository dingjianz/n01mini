var filter = {
    numTofixed : function (num, n, per) {//获取n位小数
        if (num != 0) {
            if (arguments.length == 3 && per) {
                num = num * 100;
                return parseInt(num * Math.pow(10, n) + 0.5, 10) / Math.pow(10, n) + "%";
            } else {
                return parseInt(num * Math.pow(10, n) + 0.5, 10) / Math.pow(10, n);
            }
        } else {
            if (arguments.length == 3 && per) {
                return "0%";
            } else {
                return 0;
            }
        }
    },
    strExchange : function(val,newval){//字符为空时可自定义文案
        var text = val ? val : newval;
        return text;
    },
    classExchange: function (val, fixedval, classstr) {//val有值，并且不等于fixedval时返回classstr
        var flag = val && (val != fixedval);
        return flag ? classstr:'';
    },
    datelimit: function (dateStr, today) {//日期最大值限定，无数值时限定最大为today
        return dateStr == '结束日期' ? today: dateStr; 
    },
    numberHide: function (num){//手机号中间隐藏
        var newnum = num.toString();
        var reg = getRegExp("(\d{3})(\d{4})(\d{4})");
        return newnum.replace(reg,'$1****$3');
    }
}

module.exports = {
    numTofixed: filter.numTofixed,
    strExchange: filter.strExchange,
    classExchange: filter.classExchange,
    datelimit: filter.datelimit,
    numberHide: filter.numberHide
}